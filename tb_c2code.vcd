$date
	Wed Sep 18 16:50:28 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module tb_c2code $end
$var wire 8 ! outb [7:0] $end
$var wire 8 " outa [7:0] $end
$var parameter 32 # CLK_PERIOD $end
$var reg 1 $ clk $end
$var reg 8 % ina [7:0] $end
$var reg 8 & inb [7:0] $end
$var integer 32 ' i [31:0] $end
$scope module inst1 $end
$var wire 7 ( A [6:0] $end
$var wire 7 ) B [6:0] $end
$var wire 1 $ clk1 $end
$var wire 7 * Bout [6:0] $end
$var wire 7 + Aout [6:0] $end
$var parameter 32 , bitNumber $end
$var reg 7 - Ainbuf [6:0] $end
$var reg 7 . Aoutbuf [6:0] $end
$var reg 7 / Binbuf [6:0] $end
$var reg 7 0 Boutbuf [6:0] $end
$var reg 2 1 Cinbuf [1:0] $end
$var integer 32 2 i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b111 ,
b1010 #
$end
#0
$dumpvars
b110 2
b0 1
b0 0
b0 /
b0 .
b0 -
b0 +
b0 *
b0 )
b0 (
b0 '
b0 &
b0 %
x$
b0 "
b0 !
$end
#50
b110 2
b0 1
b1000000 !
b1000000 *
b1000000 0
b1000000 /
b1000000 )
b1 '
b1000000 &
#100
b1111111 !
b1111111 *
b1111111 0
b1 "
b1 +
b1 .
b110 2
b10 1
b1000001 /
b1 -
b1000001 )
b1 (
b10 '
b1000001 &
b1 %
#150
b10 1
b1111110 !
b1111110 *
b1111110 0
b10 "
b10 +
b10 .
b110 2
b1000010 /
b10 -
b1000010 )
b10 (
b11 '
b1000010 &
b10 %
#200
b10 1
b1111101 !
b1111101 *
b1111101 0
b11 "
b11 +
b11 .
b110 2
b1000011 /
b11 -
b1000011 )
b11 (
b100 '
b1000011 &
b11 %
#250
b10 1
b1111100 !
b1111100 *
b1111100 0
b100 "
b100 +
b100 .
b110 2
b1000100 /
b100 -
b1000100 )
b100 (
b101 '
b1000100 &
b100 %
#300
b10 1
b1111011 !
b1111011 *
b1111011 0
b101 "
b101 +
b101 .
b110 2
b1000101 /
b101 -
b1000101 )
b101 (
b110 '
b1000101 &
b101 %
#350
b10 1
b1111010 !
b1111010 *
b1111010 0
b110 "
b110 +
b110 .
b110 2
b1000110 /
b110 -
b1000110 )
b110 (
b111 '
b1000110 &
b110 %
#400
b10 1
b1111001 !
b1111001 *
b1111001 0
b111 "
b111 +
b111 .
b110 2
b1000111 /
b111 -
b1000111 )
b111 (
b1000 '
b1000111 &
b111 %
#450
b10 1
b1111000 !
b1111000 *
b1111000 0
b1000 "
b1000 +
b1000 .
b110 2
b1001000 /
b1000 -
b1001000 )
b1000 (
b1001 '
b1001000 &
b1000 %
#500
b10 1
b1110111 !
b1110111 *
b1110111 0
b1001 "
b1001 +
b1001 .
b110 2
b1001001 /
b1001 -
b1001001 )
b1001 (
b1010 '
b1001001 &
b1001 %
#550
b10 1
b1110110 !
b1110110 *
b1110110 0
b1010 "
b1010 +
b1010 .
b110 2
b1001010 /
b1010 -
b1001010 )
b1010 (
b1011 '
b1001010 &
b1010 %
#600
b10 1
b1110101 !
b1110101 *
b1110101 0
b1011 "
b1011 +
b1011 .
b110 2
b1001011 /
b1011 -
b1001011 )
b1011 (
b1100 '
b1001011 &
b1011 %
#650
b10 1
b1110100 !
b1110100 *
b1110100 0
b1100 "
b1100 +
b1100 .
b110 2
b1001100 /
b1100 -
b1001100 )
b1100 (
b1101 '
b1001100 &
b1100 %
#700
b10 1
b1110011 !
b1110011 *
b1110011 0
b1101 "
b1101 +
b1101 .
b110 2
b1001101 /
b1101 -
b1001101 )
b1101 (
b1110 '
b1001101 &
b1101 %
#750
b10 1
b1110010 !
b1110010 *
b1110010 0
b1110 "
b1110 +
b1110 .
b110 2
b1001110 /
b1110 -
b1001110 )
b1110 (
b1111 '
b1001110 &
b1110 %
#800
b10 1
b1110001 !
b1110001 *
b1110001 0
b1111 "
b1111 +
b1111 .
b110 2
b1001111 /
b1111 -
b1001111 )
b1111 (
b10000 '
b1001111 &
b1111 %
#850
b10 1
b1110000 !
b1110000 *
b1110000 0
b10000 "
b10000 +
b10000 .
b110 2
b1010000 /
b10000 -
b1010000 )
b10000 (
b10001 '
b1010000 &
b10000 %
#900
b10 1
b1101111 !
b1101111 *
b1101111 0
b10001 "
b10001 +
b10001 .
b110 2
b1010001 /
b10001 -
b1010001 )
b10001 (
b10010 '
b1010001 &
b10001 %
#950
b10 1
b1101110 !
b1101110 *
b1101110 0
b10010 "
b10010 +
b10010 .
b110 2
b1010010 /
b10010 -
b1010010 )
b10010 (
b10011 '
b1010010 &
b10010 %
#1000
b10 1
b1101101 !
b1101101 *
b1101101 0
b10011 "
b10011 +
b10011 .
b110 2
b1010011 /
b10011 -
b1010011 )
b10011 (
b10100 '
b1010011 &
b10011 %
#1050
b10 1
b1101100 !
b1101100 *
b1101100 0
b10100 "
b10100 +
b10100 .
b110 2
b1010100 /
b10100 -
b1010100 )
b10100 (
b10101 '
b1010100 &
b10100 %
#1100
b10 1
b1101011 !
b1101011 *
b1101011 0
b10101 "
b10101 +
b10101 .
b110 2
b1010101 /
b10101 -
b1010101 )
b10101 (
b10110 '
b1010101 &
b10101 %
#1150
b10 1
b1101010 !
b1101010 *
b1101010 0
b10110 "
b10110 +
b10110 .
b110 2
b1010110 /
b10110 -
b1010110 )
b10110 (
b10111 '
b1010110 &
b10110 %
#1200
b10 1
b1101001 !
b1101001 *
b1101001 0
b10111 "
b10111 +
b10111 .
b110 2
b1010111 /
b10111 -
b1010111 )
b10111 (
b11000 '
b1010111 &
b10111 %
#1250
b10 1
b1101000 !
b1101000 *
b1101000 0
b11000 "
b11000 +
b11000 .
b110 2
b1011000 /
b11000 -
b1011000 )
b11000 (
b11001 '
b1011000 &
b11000 %
#1300
b10 1
b1100111 !
b1100111 *
b1100111 0
b11001 "
b11001 +
b11001 .
b110 2
b1011001 /
b11001 -
b1011001 )
b11001 (
b11010 '
b1011001 &
b11001 %
#1350
b10 1
b1100110 !
b1100110 *
b1100110 0
b11010 "
b11010 +
b11010 .
b110 2
b1011010 /
b11010 -
b1011010 )
b11010 (
b11011 '
b1011010 &
b11010 %
#1400
b10 1
b1100101 !
b1100101 *
b1100101 0
b11011 "
b11011 +
b11011 .
b110 2
b1011011 /
b11011 -
b1011011 )
b11011 (
b11100 '
b1011011 &
b11011 %
#1450
b10 1
b1100100 !
b1100100 *
b1100100 0
b11100 "
b11100 +
b11100 .
b110 2
b1011100 /
b11100 -
b1011100 )
b11100 (
b11101 '
b1011100 &
b11100 %
#1500
b10 1
b1100011 !
b1100011 *
b1100011 0
b11101 "
b11101 +
b11101 .
b110 2
b1011101 /
b11101 -
b1011101 )
b11101 (
b11110 '
b1011101 &
b11101 %
#1550
b10 1
b1100010 !
b1100010 *
b1100010 0
b11110 "
b11110 +
b11110 .
b110 2
b1011110 /
b11110 -
b1011110 )
b11110 (
b11111 '
b1011110 &
b11110 %
#1600
b10 1
b1100001 !
b1100001 *
b1100001 0
b11111 "
b11111 +
b11111 .
b110 2
b1011111 /
b11111 -
b1011111 )
b11111 (
b100000 '
b1011111 &
b11111 %
#1650
b10 1
b1100000 !
b1100000 *
b1100000 0
b100000 "
b100000 +
b100000 .
b110 2
b1100000 /
b100000 -
b1100000 )
b100000 (
b100001 '
b1100000 &
b100000 %
#1700
b10 1
b1011111 !
b1011111 *
b1011111 0
b100001 "
b100001 +
b100001 .
b110 2
b1100001 /
b100001 -
b1100001 )
b100001 (
b100010 '
b1100001 &
b100001 %
#1750
b10 1
b1011110 !
b1011110 *
b1011110 0
b100010 "
b100010 +
b100010 .
b110 2
b1100010 /
b100010 -
b1100010 )
b100010 (
b100011 '
b1100010 &
b100010 %
#1800
b10 1
b1011101 !
b1011101 *
b1011101 0
b100011 "
b100011 +
b100011 .
b110 2
b1100011 /
b100011 -
b1100011 )
b100011 (
b100100 '
b1100011 &
b100011 %
#1850
b10 1
b1011100 !
b1011100 *
b1011100 0
b100100 "
b100100 +
b100100 .
b110 2
b1100100 /
b100100 -
b1100100 )
b100100 (
b100101 '
b1100100 &
b100100 %
#1900
b10 1
b1011011 !
b1011011 *
b1011011 0
b100101 "
b100101 +
b100101 .
b110 2
b1100101 /
b100101 -
b1100101 )
b100101 (
b100110 '
b1100101 &
b100101 %
#1950
b10 1
b1011010 !
b1011010 *
b1011010 0
b100110 "
b100110 +
b100110 .
b110 2
b1100110 /
b100110 -
b1100110 )
b100110 (
b100111 '
b1100110 &
b100110 %
#2000
b10 1
b1011001 !
b1011001 *
b1011001 0
b100111 "
b100111 +
b100111 .
b110 2
b1100111 /
b100111 -
b1100111 )
b100111 (
b101000 '
b1100111 &
b100111 %
#2050
b10 1
b1011000 !
b1011000 *
b1011000 0
b101000 "
b101000 +
b101000 .
b110 2
b1101000 /
b101000 -
b1101000 )
b101000 (
b101001 '
b1101000 &
b101000 %
#2100
b10 1
b1010111 !
b1010111 *
b1010111 0
b101001 "
b101001 +
b101001 .
b110 2
b1101001 /
b101001 -
b1101001 )
b101001 (
b101010 '
b1101001 &
b101001 %
#2150
b10 1
b1010110 !
b1010110 *
b1010110 0
b101010 "
b101010 +
b101010 .
b110 2
b1101010 /
b101010 -
b1101010 )
b101010 (
b101011 '
b1101010 &
b101010 %
#2200
b10 1
b1010101 !
b1010101 *
b1010101 0
b101011 "
b101011 +
b101011 .
b110 2
b1101011 /
b101011 -
b1101011 )
b101011 (
b101100 '
b1101011 &
b101011 %
#2250
b10 1
b1010100 !
b1010100 *
b1010100 0
b101100 "
b101100 +
b101100 .
b110 2
b1101100 /
b101100 -
b1101100 )
b101100 (
b101101 '
b1101100 &
b101100 %
#2300
b10 1
b1010011 !
b1010011 *
b1010011 0
b101101 "
b101101 +
b101101 .
b110 2
b1101101 /
b101101 -
b1101101 )
b101101 (
b101110 '
b1101101 &
b101101 %
#2350
b10 1
b1010010 !
b1010010 *
b1010010 0
b101110 "
b101110 +
b101110 .
b110 2
b1101110 /
b101110 -
b1101110 )
b101110 (
b101111 '
b1101110 &
b101110 %
#2400
b10 1
b1010001 !
b1010001 *
b1010001 0
b101111 "
b101111 +
b101111 .
b110 2
b1101111 /
b101111 -
b1101111 )
b101111 (
b110000 '
b1101111 &
b101111 %
#2450
b10 1
b1010000 !
b1010000 *
b1010000 0
b110000 "
b110000 +
b110000 .
b110 2
b1110000 /
b110000 -
b1110000 )
b110000 (
b110001 '
b1110000 &
b110000 %
#2500
b10 1
b1001111 !
b1001111 *
b1001111 0
b110001 "
b110001 +
b110001 .
b110 2
b1110001 /
b110001 -
b1110001 )
b110001 (
b110010 '
b1110001 &
b110001 %
#2550
b10 1
b1001110 !
b1001110 *
b1001110 0
b110010 "
b110010 +
b110010 .
b110 2
b1110010 /
b110010 -
b1110010 )
b110010 (
b110011 '
b1110010 &
b110010 %
#2600
b10 1
b1001101 !
b1001101 *
b1001101 0
b110011 "
b110011 +
b110011 .
b110 2
b1110011 /
b110011 -
b1110011 )
b110011 (
b110100 '
b1110011 &
b110011 %
#2650
b10 1
b1001100 !
b1001100 *
b1001100 0
b110100 "
b110100 +
b110100 .
b110 2
b1110100 /
b110100 -
b1110100 )
b110100 (
b110101 '
b1110100 &
b110100 %
#2700
b10 1
b1001011 !
b1001011 *
b1001011 0
b110101 "
b110101 +
b110101 .
b110 2
b1110101 /
b110101 -
b1110101 )
b110101 (
b110110 '
b1110101 &
b110101 %
#2750
b10 1
b1001010 !
b1001010 *
b1001010 0
b110110 "
b110110 +
b110110 .
b110 2
b1110110 /
b110110 -
b1110110 )
b110110 (
b110111 '
b1110110 &
b110110 %
#2800
b10 1
b1001001 !
b1001001 *
b1001001 0
b110111 "
b110111 +
b110111 .
b110 2
b1110111 /
b110111 -
b1110111 )
b110111 (
b111000 '
b1110111 &
b110111 %
#2850
b10 1
b1001000 !
b1001000 *
b1001000 0
b111000 "
b111000 +
b111000 .
b110 2
b1111000 /
b111000 -
b1111000 )
b111000 (
b111001 '
b1111000 &
b111000 %
#2900
b10 1
b1000111 !
b1000111 *
b1000111 0
b111001 "
b111001 +
b111001 .
b110 2
b1111001 /
b111001 -
b1111001 )
b111001 (
b111010 '
b1111001 &
b111001 %
#2950
b10 1
b1000110 !
b1000110 *
b1000110 0
b111010 "
b111010 +
b111010 .
b110 2
b1111010 /
b111010 -
b1111010 )
b111010 (
b111011 '
b1111010 &
b111010 %
#3000
b10 1
b1000101 !
b1000101 *
b1000101 0
b111011 "
b111011 +
b111011 .
b110 2
b1111011 /
b111011 -
b1111011 )
b111011 (
b111100 '
b1111011 &
b111011 %
#3050
b10 1
b1000100 !
b1000100 *
b1000100 0
b111100 "
b111100 +
b111100 .
b110 2
b1111100 /
b111100 -
b1111100 )
b111100 (
b111101 '
b1111100 &
b111100 %
#3100
b10 1
b1000011 !
b1000011 *
b1000011 0
b111101 "
b111101 +
b111101 .
b110 2
b1111101 /
b111101 -
b1111101 )
b111101 (
b111110 '
b1111101 &
b111101 %
#3150
b10 1
b1000010 !
b1000010 *
b1000010 0
b111110 "
b111110 +
b111110 .
b110 2
b1111110 /
b111110 -
b1111110 )
b111110 (
b111111 '
b1111110 &
b111110 %
#3200
b10 1
b1000001 !
b1000001 *
b1000001 0
b111111 "
b111111 +
b111111 .
b110 2
b1111111 /
b111111 -
b1111111 )
b111111 (
b1000000 '
b1111111 &
b111111 %
#3700
